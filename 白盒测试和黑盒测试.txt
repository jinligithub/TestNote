1.常用的白盒测试和黑盒测试用例的方法？各有什么优点？
答：
白盒测试
1）语句覆盖：
优点：可以使所有的执行语句都被执行。
缺点：不能准确地判定运算中的逻辑错误
2）判定覆盖：
缺点：会忽略条件中取”OR”(或)的情况。
优点：每个判断分支至少会被执行一次
3）条件覆盖：
优点：每个判断中的每个条件的可能取值至少满足一次。

缺点：测试可能会遗漏程序逻辑错误。
4）判断条件覆盖
优点：使得判断条件中的所有条件可能取值至少执行一次，，同时，所有判断结果至少执行一次。
5）条件组合覆盖
优点：使得判断中的每个条件的所有可能至少出现一次，并且每个判定结果至少出现一次，它要求这些结果的所有可能组合都至少出现一次。
缺点：所有的条件覆盖组合不能保证所有的路径都被执行
6）路径覆盖：
优点：覆盖程序中所有可能执行路径
缺点：路径覆盖没法覆盖所有的条件组合
7）基本路径测试法
优点：保证程序的每一个可能的执行语句至少都被执行一次
缺点：复杂
黑盒测试：
1）	等价类划分法
优点：用较少的测试用例就能够进行完整覆盖，很大程度上减少了重复性
缺点：缺乏特殊用例的考虑，特殊还需要升入的系统的知识，才能选择有效的数据
2）	边界值分析法：
优点：检查边界可以发现更多的错误，
缺点：对布尔值或者逻辑变量无效，也不能很好的的测试不同的输入组合
3）	判定表方法
优点：低成本实现，低成本维护，易于自动化，易于用较少的测试用例方法更多的错误和用户自定义限制。
缺点：经常使用专家领域知识，不能测试所有可能的组合不能测试复杂的交互
4）	因果图方法
优点：不仅能发现输入输出的错误，还能指出程序规范中的不完全性和二义性
5）	正交实验法
优点；每个因素只有两种情况，是和否
缺点：输条件的因素很多，而且每个因素也不能简单的用是和否回答，而且测试组合多，导致工作量大
2.	在白盒测试中语句覆盖，路径覆盖，条件覆盖，判定覆盖等，其中覆盖率最强的是？为什么？
答：路径覆盖，因为一个程序中往往有多个条件判断的节点，路径覆盖是要把所有节点的可能输出结果的组合都覆盖到的。但是，路径覆盖和条件覆盖的方向并不相同，二者有互相交叉的方面。路径覆盖并不能包含到条件覆盖的所有CASE。所以，在只有少数判断分支，且每个分支的判断都是由多个子条件组合而成时，条件覆盖却更严密一些。
所以，从理论上讲，最严密的白盒覆盖方式是路径覆盖+条件组合覆盖。但是，由于条件组合覆盖过于复杂且产生的用例数过多，大多数情况下是不使用的。在测试实践中，我们一般认为，最严密的白盒覆盖方式就是路径覆盖。
3.	针对十八位的身份证号，通过等价类划分设计测试用例
答：等于18位612326197802156587
大于十八位：612326198705268564
小于十八位：61232619870526856
特殊情况：0，1，以及在开始出现的字符等
4.	使用边界值法设计b=Abs(a)的测试用例 
答：a=10;  a=-10;   a=0;  a=1

5.	根据流程图使用最少的测试用例完成语句覆盖，判定覆盖，条件覆盖，和路径覆盖
语句覆盖：
Case1:   1,22  输出 22  abs(T,F)
Case 2:   1,-1  输出  0   abs(F,T)
判断覆盖：
Case3:   1,22  输出 22  abs(T,F)
Case4    1,-1  输出 0   abs(F,T)
条件覆盖
Case5:   1,22  输出 22  abs(T,F)
Case6    -11,-1  输出 12   abs(F,T)
路径覆盖
Case7:   1,22  输出 22  abs(T,F)
Case8    1,-1  输出 1   abs(F,F) 
Case9    -1,-11  输出 12   abs(F,T)


6.	结合边界分析法和等价诶划分法针对不同的人设计测试用例
499  499.9  500  500.1  501   1000   1999  1999.9   2000  2000.1  2001 
